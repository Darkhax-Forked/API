/*
 * This file is generated by jOOQ.
*/
package com.diluv.api.models.tables.records;


import com.diluv.api.models.tables.Authaccesstoken;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class AuthaccesstokenRecord extends UpdatableRecordImpl<AuthaccesstokenRecord> implements Record3<String, String, Long> {

    private static final long serialVersionUID = -787513604;

    /**
     * Setter for <code>diluv.authAccessToken.token</code>.
     */
    public void setToken(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>diluv.authAccessToken.token</code>.
     */
    public String getToken() {
        return (String) get(0);
    }

    /**
     * Setter for <code>diluv.authAccessToken.refreshToken</code>.
     */
    public void setRefreshtoken(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>diluv.authAccessToken.refreshToken</code>.
     */
    public String getRefreshtoken() {
        return (String) get(1);
    }

    /**
     * Setter for <code>diluv.authAccessToken.userID</code>.
     */
    public void setUserid(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>diluv.authAccessToken.userID</code>.
     */
    public Long getUserid() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Authaccesstoken.AUTHACCESSTOKEN.TOKEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Authaccesstoken.AUTHACCESSTOKEN.REFRESHTOKEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return Authaccesstoken.AUTHACCESSTOKEN.USERID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getRefreshtoken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getUserid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthaccesstokenRecord value1(String value) {
        setToken(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthaccesstokenRecord value2(String value) {
        setRefreshtoken(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthaccesstokenRecord value3(Long value) {
        setUserid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthaccesstokenRecord values(String value1, String value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthaccesstokenRecord
     */
    public AuthaccesstokenRecord() {
        super(Authaccesstoken.AUTHACCESSTOKEN);
    }

    /**
     * Create a detached, initialised AuthaccesstokenRecord
     */
    public AuthaccesstokenRecord(String token, String refreshtoken, Long userid) {
        super(Authaccesstoken.AUTHACCESSTOKEN);

        set(0, token);
        set(1, refreshtoken);
        set(2, userid);
    }
}
