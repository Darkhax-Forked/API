/*
 * This file is generated by jOOQ.
*/
package com.diluv.api.models.tables.records;


import com.diluv.api.models.tables.AuthAccessToken;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class AuthAccessTokenRecord extends UpdatableRecordImpl<AuthAccessTokenRecord> implements Record3<String, String, Long> {

    private static final long serialVersionUID = -1008740026;

    /**
     * Setter for <code>diluv.AUTH_ACCESS_TOKEN.TOKEN</code>.
     */
    public void setToken(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>diluv.AUTH_ACCESS_TOKEN.TOKEN</code>.
     */
    public String getToken() {
        return (String) get(0);
    }

    /**
     * Setter for <code>diluv.AUTH_ACCESS_TOKEN.REFRESH_TOKEN</code>.
     */
    public void setRefreshToken(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>diluv.AUTH_ACCESS_TOKEN.REFRESH_TOKEN</code>.
     */
    public String getRefreshToken() {
        return (String) get(1);
    }

    /**
     * Setter for <code>diluv.AUTH_ACCESS_TOKEN.USER_ID</code>.
     */
    public void setUserId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>diluv.AUTH_ACCESS_TOKEN.USER_ID</code>.
     */
    public Long getUserId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return AuthAccessToken.AUTH_ACCESS_TOKEN.TOKEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return AuthAccessToken.AUTH_ACCESS_TOKEN.REFRESH_TOKEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return AuthAccessToken.AUTH_ACCESS_TOKEN.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getRefreshToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthAccessTokenRecord value1(String value) {
        setToken(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthAccessTokenRecord value2(String value) {
        setRefreshToken(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthAccessTokenRecord value3(Long value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthAccessTokenRecord values(String value1, String value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthAccessTokenRecord
     */
    public AuthAccessTokenRecord() {
        super(AuthAccessToken.AUTH_ACCESS_TOKEN);
    }

    /**
     * Create a detached, initialised AuthAccessTokenRecord
     */
    public AuthAccessTokenRecord(String token, String refreshToken, Long userId) {
        super(AuthAccessToken.AUTH_ACCESS_TOKEN);

        set(0, token);
        set(1, refreshToken);
        set(2, userId);
    }
}
