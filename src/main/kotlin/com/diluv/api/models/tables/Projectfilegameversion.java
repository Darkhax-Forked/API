/*
 * This file is generated by jOOQ.
*/
package com.diluv.api.models.tables;


import com.diluv.api.models.Diluv;
import com.diluv.api.models.Keys;
import com.diluv.api.models.tables.records.ProjectfilegameversionRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Projectfilegameversion extends TableImpl<ProjectfilegameversionRecord> {

    private static final long serialVersionUID = -778615220;

    /**
     * The reference instance of <code>diluv.projectFileGameVersion</code>
     */
    public static final Projectfilegameversion PROJECTFILEGAMEVERSION = new Projectfilegameversion();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProjectfilegameversionRecord> getRecordType() {
        return ProjectfilegameversionRecord.class;
    }

    /**
     * The column <code>diluv.projectFileGameVersion.projectFileId</code>.
     */
    public final TableField<ProjectfilegameversionRecord, Long> PROJECTFILEID = createField("projectFileId", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>diluv.projectFileGameVersion.projectVersionId</code>.
     */
    public final TableField<ProjectfilegameversionRecord, Long> PROJECTVERSIONID = createField("projectVersionId", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>diluv.projectFileGameVersion</code> table reference
     */
    public Projectfilegameversion() {
        this("projectFileGameVersion", null);
    }

    /**
     * Create an aliased <code>diluv.projectFileGameVersion</code> table reference
     */
    public Projectfilegameversion(String alias) {
        this(alias, PROJECTFILEGAMEVERSION);
    }

    private Projectfilegameversion(String alias, Table<ProjectfilegameversionRecord> aliased) {
        this(alias, aliased, null);
    }

    private Projectfilegameversion(String alias, Table<ProjectfilegameversionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Diluv.DILUV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProjectfilegameversionRecord> getPrimaryKey() {
        return Keys.KEY_PROJECTFILEGAMEVERSION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProjectfilegameversionRecord>> getKeys() {
        return Arrays.<UniqueKey<ProjectfilegameversionRecord>>asList(Keys.KEY_PROJECTFILEGAMEVERSION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ProjectfilegameversionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ProjectfilegameversionRecord, ?>>asList(Keys.PROJECTFILEGAMEVERSION_IBFK_1, Keys.PROJECTFILEGAMEVERSION_IBFK_2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Projectfilegameversion as(String alias) {
        return new Projectfilegameversion(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Projectfilegameversion rename(String name) {
        return new Projectfilegameversion(name, null);
    }
}
