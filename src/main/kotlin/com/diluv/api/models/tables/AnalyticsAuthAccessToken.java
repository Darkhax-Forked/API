/*
 * This file is generated by jOOQ.
*/
package com.diluv.api.models.tables;


import com.diluv.api.models.Diluv;
import com.diluv.api.models.Keys;
import com.diluv.api.models.tables.records.AnalyticsAuthAccessTokenRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class AnalyticsAuthAccessToken extends TableImpl<AnalyticsAuthAccessTokenRecord> {

    private static final long serialVersionUID = -1228798092;

    /**
     * The reference instance of <code>diluv.ANALYTICS_AUTH_ACCESS_TOKEN</code>
     */
    public static final AnalyticsAuthAccessToken ANALYTICS_AUTH_ACCESS_TOKEN = new AnalyticsAuthAccessToken();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AnalyticsAuthAccessTokenRecord> getRecordType() {
        return AnalyticsAuthAccessTokenRecord.class;
    }

    /**
     * The column <code>diluv.ANALYTICS_AUTH_ACCESS_TOKEN.ID</code>.
     */
    public final TableField<AnalyticsAuthAccessTokenRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>diluv.ANALYTICS_AUTH_ACCESS_TOKEN.TOKEN</code>.
     */
    public final TableField<AnalyticsAuthAccessTokenRecord, String> TOKEN = createField("TOKEN", org.jooq.impl.SQLDataType.VARCHAR.length(500).nullable(false), this, "");

    /**
     * The column <code>diluv.ANALYTICS_AUTH_ACCESS_TOKEN.REFRESH_TOKEN</code>.
     */
    public final TableField<AnalyticsAuthAccessTokenRecord, String> REFRESH_TOKEN = createField("REFRESH_TOKEN", org.jooq.impl.SQLDataType.VARCHAR.length(500).nullable(false), this, "");

    /**
     * The column <code>diluv.ANALYTICS_AUTH_ACCESS_TOKEN.CREATED_AT</code>.
     */
    public final TableField<AnalyticsAuthAccessTokenRecord, Timestamp> CREATED_AT = createField("CREATED_AT", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>diluv.ANALYTICS_AUTH_ACCESS_TOKEN.USER_ID</code>.
     */
    public final TableField<AnalyticsAuthAccessTokenRecord, Long> USER_ID = createField("USER_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>diluv.ANALYTICS_AUTH_ACCESS_TOKEN</code> table reference
     */
    public AnalyticsAuthAccessToken() {
        this("ANALYTICS_AUTH_ACCESS_TOKEN", null);
    }

    /**
     * Create an aliased <code>diluv.ANALYTICS_AUTH_ACCESS_TOKEN</code> table reference
     */
    public AnalyticsAuthAccessToken(String alias) {
        this(alias, ANALYTICS_AUTH_ACCESS_TOKEN);
    }

    private AnalyticsAuthAccessToken(String alias, Table<AnalyticsAuthAccessTokenRecord> aliased) {
        this(alias, aliased, null);
    }

    private AnalyticsAuthAccessToken(String alias, Table<AnalyticsAuthAccessTokenRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Diluv.DILUV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AnalyticsAuthAccessTokenRecord, Long> getIdentity() {
        return Keys.IDENTITY_ANALYTICS_AUTH_ACCESS_TOKEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AnalyticsAuthAccessTokenRecord> getPrimaryKey() {
        return Keys.KEY_ANALYTICS_AUTH_ACCESS_TOKEN_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AnalyticsAuthAccessTokenRecord>> getKeys() {
        return Arrays.<UniqueKey<AnalyticsAuthAccessTokenRecord>>asList(Keys.KEY_ANALYTICS_AUTH_ACCESS_TOKEN_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AnalyticsAuthAccessTokenRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AnalyticsAuthAccessTokenRecord, ?>>asList(Keys.ANALYTICS_AUTH_ACCESS_TOKEN_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalyticsAuthAccessToken as(String alias) {
        return new AnalyticsAuthAccessToken(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AnalyticsAuthAccessToken rename(String name) {
        return new AnalyticsAuthAccessToken(name, null);
    }
}
