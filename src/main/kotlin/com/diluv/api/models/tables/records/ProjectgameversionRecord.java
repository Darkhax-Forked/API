/*
 * This file is generated by jOOQ.
*/
package com.diluv.api.models.tables.records;


import com.diluv.api.models.tables.Projectgameversion;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ProjectgameversionRecord extends UpdatableRecordImpl<ProjectgameversionRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = -865996672;

    /**
     * Setter for <code>diluv.projectGameVersion.projectId</code>.
     */
    public void setProjectid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>diluv.projectGameVersion.projectId</code>.
     */
    public Long getProjectid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>diluv.projectGameVersion.projectVersionId</code>.
     */
    public void setProjectversionid(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>diluv.projectGameVersion.projectVersionId</code>.
     */
    public Long getProjectversionid() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Projectgameversion.PROJECTGAMEVERSION.PROJECTID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Projectgameversion.PROJECTGAMEVERSION.PROJECTVERSIONID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getProjectid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getProjectversionid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectgameversionRecord value1(Long value) {
        setProjectid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectgameversionRecord value2(Long value) {
        setProjectversionid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectgameversionRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProjectgameversionRecord
     */
    public ProjectgameversionRecord() {
        super(Projectgameversion.PROJECTGAMEVERSION);
    }

    /**
     * Create a detached, initialised ProjectgameversionRecord
     */
    public ProjectgameversionRecord(Long projectid, Long projectversionid) {
        super(Projectgameversion.PROJECTGAMEVERSION);

        set(0, projectid);
        set(1, projectversionid);
    }
}
