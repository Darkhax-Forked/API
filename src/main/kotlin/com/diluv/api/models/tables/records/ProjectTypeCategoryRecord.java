/*
 * This file is generated by jOOQ.
*/
package com.diluv.api.models.tables.records;


import com.diluv.api.models.tables.ProjectTypeCategory;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ProjectTypeCategoryRecord extends UpdatableRecordImpl<ProjectTypeCategoryRecord> implements Record5<Long, String, String, String, Long> {

    private static final long serialVersionUID = -60547477;

    /**
     * Setter for <code>diluv.PROJECT_TYPE_CATEGORY.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>diluv.PROJECT_TYPE_CATEGORY.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>diluv.PROJECT_TYPE_CATEGORY.NAME</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>diluv.PROJECT_TYPE_CATEGORY.NAME</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>diluv.PROJECT_TYPE_CATEGORY.DESCRIPTION</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>diluv.PROJECT_TYPE_CATEGORY.DESCRIPTION</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>diluv.PROJECT_TYPE_CATEGORY.SLUG</code>.
     */
    public void setSlug(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>diluv.PROJECT_TYPE_CATEGORY.SLUG</code>.
     */
    public String getSlug() {
        return (String) get(3);
    }

    /**
     * Setter for <code>diluv.PROJECT_TYPE_CATEGORY.PROJECT_TYPE_ID</code>.
     */
    public void setProjectTypeId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>diluv.PROJECT_TYPE_CATEGORY.PROJECT_TYPE_ID</code>.
     */
    public Long getProjectTypeId() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, String, String, String, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, String, String, String, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return ProjectTypeCategory.PROJECT_TYPE_CATEGORY.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return ProjectTypeCategory.PROJECT_TYPE_CATEGORY.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return ProjectTypeCategory.PROJECT_TYPE_CATEGORY.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return ProjectTypeCategory.PROJECT_TYPE_CATEGORY.SLUG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field5() {
        return ProjectTypeCategory.PROJECT_TYPE_CATEGORY.PROJECT_TYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSlug();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value5() {
        return getProjectTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectTypeCategoryRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectTypeCategoryRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectTypeCategoryRecord value3(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectTypeCategoryRecord value4(String value) {
        setSlug(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectTypeCategoryRecord value5(Long value) {
        setProjectTypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectTypeCategoryRecord values(Long value1, String value2, String value3, String value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProjectTypeCategoryRecord
     */
    public ProjectTypeCategoryRecord() {
        super(ProjectTypeCategory.PROJECT_TYPE_CATEGORY);
    }

    /**
     * Create a detached, initialised ProjectTypeCategoryRecord
     */
    public ProjectTypeCategoryRecord(Long id, String name, String description, String slug, Long projectTypeId) {
        super(ProjectTypeCategory.PROJECT_TYPE_CATEGORY);

        set(0, id);
        set(1, name);
        set(2, description);
        set(3, slug);
        set(4, projectTypeId);
    }
}
