/*
 * This file is generated by jOOQ.
*/
package com.diluv.api.models.tables.records;


import com.diluv.api.models.tables.AnalyticsBetaKey;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class AnalyticsBetaKeyRecord extends UpdatableRecordImpl<AnalyticsBetaKeyRecord> implements Record2<Long, Timestamp> {

    private static final long serialVersionUID = -403739108;

    /**
     * Setter for <code>diluv.ANALYTICS_BETA_KEY.USER_ID</code>.
     */
    public void setUserId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>diluv.ANALYTICS_BETA_KEY.USER_ID</code>.
     */
    public Long getUserId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>diluv.ANALYTICS_BETA_KEY.CREATED_AT</code>.
     */
    public void setCreatedAt(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>diluv.ANALYTICS_BETA_KEY.CREATED_AT</code>.
     */
    public Timestamp getCreatedAt() {
        return (Timestamp) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Timestamp> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Timestamp> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return AnalyticsBetaKey.ANALYTICS_BETA_KEY.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return AnalyticsBetaKey.ANALYTICS_BETA_KEY.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalyticsBetaKeyRecord value1(Long value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalyticsBetaKeyRecord value2(Timestamp value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnalyticsBetaKeyRecord values(Long value1, Timestamp value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AnalyticsBetaKeyRecord
     */
    public AnalyticsBetaKeyRecord() {
        super(AnalyticsBetaKey.ANALYTICS_BETA_KEY);
    }

    /**
     * Create a detached, initialised AnalyticsBetaKeyRecord
     */
    public AnalyticsBetaKeyRecord(Long userId, Timestamp createdAt) {
        super(AnalyticsBetaKey.ANALYTICS_BETA_KEY);

        set(0, userId);
        set(1, createdAt);
    }
}
