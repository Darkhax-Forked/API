/*
 * This file is generated by jOOQ.
*/
package com.diluv.api.models.tables;


import com.diluv.api.models.Diluv;
import com.diluv.api.models.Keys;
import com.diluv.api.models.tables.records.AuthmfatokenRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Authmfatoken extends TableImpl<AuthmfatokenRecord> {

    private static final long serialVersionUID = 150004798;

    /**
     * The reference instance of <code>diluv.authMFAToken</code>
     */
    public static final Authmfatoken AUTHMFATOKEN = new Authmfatoken();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AuthmfatokenRecord> getRecordType() {
        return AuthmfatokenRecord.class;
    }

    /**
     * The column <code>diluv.authMFAToken.token</code>.
     */
    public final TableField<AuthmfatokenRecord, String> TOKEN = createField("token", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>diluv.authMFAToken.userID</code>.
     */
    public final TableField<AuthmfatokenRecord, Long> USERID = createField("userID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>diluv.authMFAToken</code> table reference
     */
    public Authmfatoken() {
        this("authMFAToken", null);
    }

    /**
     * Create an aliased <code>diluv.authMFAToken</code> table reference
     */
    public Authmfatoken(String alias) {
        this(alias, AUTHMFATOKEN);
    }

    private Authmfatoken(String alias, Table<AuthmfatokenRecord> aliased) {
        this(alias, aliased, null);
    }

    private Authmfatoken(String alias, Table<AuthmfatokenRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Diluv.DILUV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AuthmfatokenRecord> getPrimaryKey() {
        return Keys.KEY_AUTHMFATOKEN_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AuthmfatokenRecord>> getKeys() {
        return Arrays.<UniqueKey<AuthmfatokenRecord>>asList(Keys.KEY_AUTHMFATOKEN_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AuthmfatokenRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AuthmfatokenRecord, ?>>asList(Keys.AUTHMFATOKEN_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Authmfatoken as(String alias) {
        return new Authmfatoken(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Authmfatoken rename(String name) {
        return new Authmfatoken(name, null);
    }
}
