/*
 * This file is generated by jOOQ.
*/
package com.diluv.api.models.tables;


import com.diluv.api.models.Diluv;
import com.diluv.api.models.Keys;
import com.diluv.api.models.tables.records.AnalyticsauthmfatokenRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Analyticsauthmfatoken extends TableImpl<AnalyticsauthmfatokenRecord> {

    private static final long serialVersionUID = -1648030253;

    /**
     * The reference instance of <code>diluv.analyticsAuthMFAToken</code>
     */
    public static final Analyticsauthmfatoken ANALYTICSAUTHMFATOKEN = new Analyticsauthmfatoken();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AnalyticsauthmfatokenRecord> getRecordType() {
        return AnalyticsauthmfatokenRecord.class;
    }

    /**
     * The column <code>diluv.analyticsAuthMFAToken.id</code>.
     */
    public final TableField<AnalyticsauthmfatokenRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>diluv.analyticsAuthMFAToken.token</code>.
     */
    public final TableField<AnalyticsauthmfatokenRecord, String> TOKEN = createField("token", org.jooq.impl.SQLDataType.VARCHAR.length(500).nullable(false), this, "");

    /**
     * The column <code>diluv.analyticsAuthMFAToken.createdAt</code>.
     */
    public final TableField<AnalyticsauthmfatokenRecord, Timestamp> CREATEDAT = createField("createdAt", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>diluv.analyticsAuthMFAToken.userId</code>.
     */
    public final TableField<AnalyticsauthmfatokenRecord, Long> USERID = createField("userId", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>diluv.analyticsAuthMFAToken</code> table reference
     */
    public Analyticsauthmfatoken() {
        this("analyticsAuthMFAToken", null);
    }

    /**
     * Create an aliased <code>diluv.analyticsAuthMFAToken</code> table reference
     */
    public Analyticsauthmfatoken(String alias) {
        this(alias, ANALYTICSAUTHMFATOKEN);
    }

    private Analyticsauthmfatoken(String alias, Table<AnalyticsauthmfatokenRecord> aliased) {
        this(alias, aliased, null);
    }

    private Analyticsauthmfatoken(String alias, Table<AnalyticsauthmfatokenRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Diluv.DILUV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AnalyticsauthmfatokenRecord, Long> getIdentity() {
        return Keys.IDENTITY_ANALYTICSAUTHMFATOKEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AnalyticsauthmfatokenRecord> getPrimaryKey() {
        return Keys.KEY_ANALYTICSAUTHMFATOKEN_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AnalyticsauthmfatokenRecord>> getKeys() {
        return Arrays.<UniqueKey<AnalyticsauthmfatokenRecord>>asList(Keys.KEY_ANALYTICSAUTHMFATOKEN_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AnalyticsauthmfatokenRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AnalyticsauthmfatokenRecord, ?>>asList(Keys.ANALYTICSAUTHMFATOKEN_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Analyticsauthmfatoken as(String alias) {
        return new Analyticsauthmfatoken(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Analyticsauthmfatoken rename(String name) {
        return new Analyticsauthmfatoken(name, null);
    }
}
