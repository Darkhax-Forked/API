/*
 * This file is generated by jOOQ.
*/
package com.diluv.api.models.tables;


import com.diluv.api.models.Diluv;
import com.diluv.api.models.Keys;
import com.diluv.api.models.tables.records.UserBetaKeyRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class UserBetaKey extends TableImpl<UserBetaKeyRecord> {

    private static final long serialVersionUID = 222426486;

    /**
     * The reference instance of <code>diluv.USER_BETA_KEY</code>
     */
    public static final UserBetaKey USER_BETA_KEY = new UserBetaKey();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserBetaKeyRecord> getRecordType() {
        return UserBetaKeyRecord.class;
    }

    /**
     * The column <code>diluv.USER_BETA_KEY.BETA_KEY</code>.
     */
    public final TableField<UserBetaKeyRecord, String> BETA_KEY = createField("BETA_KEY", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

    /**
     * The column <code>diluv.USER_BETA_KEY.VALID</code>.
     */
    public final TableField<UserBetaKeyRecord, Boolean> VALID = createField("VALID", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

    /**
     * The column <code>diluv.USER_BETA_KEY.CREATED_AT</code>.
     */
    public final TableField<UserBetaKeyRecord, Timestamp> CREATED_AT = createField("CREATED_AT", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>diluv.USER_BETA_KEY.USER_ID</code>.
     */
    public final TableField<UserBetaKeyRecord, Long> USER_ID = createField("USER_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>diluv.USER_BETA_KEY.CREATION_USER_ID</code>.
     */
    public final TableField<UserBetaKeyRecord, Long> CREATION_USER_ID = createField("CREATION_USER_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>diluv.USER_BETA_KEY</code> table reference
     */
    public UserBetaKey() {
        this("USER_BETA_KEY", null);
    }

    /**
     * Create an aliased <code>diluv.USER_BETA_KEY</code> table reference
     */
    public UserBetaKey(String alias) {
        this(alias, USER_BETA_KEY);
    }

    private UserBetaKey(String alias, Table<UserBetaKeyRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserBetaKey(String alias, Table<UserBetaKeyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Diluv.DILUV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserBetaKeyRecord> getPrimaryKey() {
        return Keys.KEY_USER_BETA_KEY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserBetaKeyRecord>> getKeys() {
        return Arrays.<UniqueKey<UserBetaKeyRecord>>asList(Keys.KEY_USER_BETA_KEY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserBetaKeyRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserBetaKeyRecord, ?>>asList(Keys.USER_BETA_KEY_IBFK_1, Keys.USER_BETA_KEY_IBFK_2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserBetaKey as(String alias) {
        return new UserBetaKey(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserBetaKey rename(String name) {
        return new UserBetaKey(name, null);
    }
}
