/*
 * This file is generated by jOOQ.
*/
package com.diluv.api.models.tables.records;


import com.diluv.api.models.tables.User;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record13<Long, String, String, String, Integer, String, Boolean, Boolean, String, String, String, String, Timestamp> {

    private static final long serialVersionUID = -804329841;

    /**
     * Setter for <code>diluv.USER.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>diluv.USER.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>diluv.USER.EMAIL</code>.
     */
    public void setEmail(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>diluv.USER.EMAIL</code>.
     */
    public String getEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>diluv.USER.USERNAME</code>.
     */
    public void setUsername(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>diluv.USER.USERNAME</code>.
     */
    public String getUsername() {
        return (String) get(2);
    }

    /**
     * Setter for <code>diluv.USER.PASSWORD</code>.
     */
    public void setPassword(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>diluv.USER.PASSWORD</code>.
     */
    public String getPassword() {
        return (String) get(3);
    }

    /**
     * Setter for <code>diluv.USER.PERMISSION</code>.
     */
    public void setPermission(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>diluv.USER.PERMISSION</code>.
     */
    public Integer getPermission() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>diluv.USER.AVATAR</code>.
     */
    public void setAvatar(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>diluv.USER.AVATAR</code>.
     */
    public String getAvatar() {
        return (String) get(5);
    }

    /**
     * Setter for <code>diluv.USER.VERIFIED_EMAIL</code>.
     */
    public void setVerifiedEmail(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>diluv.USER.VERIFIED_EMAIL</code>.
     */
    public Boolean getVerifiedEmail() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>diluv.USER.MFA_ENABLED</code>.
     */
    public void setMfaEnabled(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>diluv.USER.MFA_ENABLED</code>.
     */
    public Boolean getMfaEnabled() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>diluv.USER.LOCATION</code>.
     */
    public void setLocation(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>diluv.USER.LOCATION</code>.
     */
    public String getLocation() {
        return (String) get(8);
    }

    /**
     * Setter for <code>diluv.USER.FIRST_NAME</code>.
     */
    public void setFirstName(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>diluv.USER.FIRST_NAME</code>.
     */
    public String getFirstName() {
        return (String) get(9);
    }

    /**
     * Setter for <code>diluv.USER.LAST_NAME</code>.
     */
    public void setLastName(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>diluv.USER.LAST_NAME</code>.
     */
    public String getLastName() {
        return (String) get(10);
    }

    /**
     * Setter for <code>diluv.USER.MFA_SECRET</code>.
     */
    public void setMfaSecret(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>diluv.USER.MFA_SECRET</code>.
     */
    public String getMfaSecret() {
        return (String) get(11);
    }

    /**
     * Setter for <code>diluv.USER.CREATED_AT</code>.
     */
    public void setCreatedAt(Timestamp value) {
        set(12, value);
    }

    /**
     * Getter for <code>diluv.USER.CREATED_AT</code>.
     */
    public Timestamp getCreatedAt() {
        return (Timestamp) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Long, String, String, String, Integer, String, Boolean, Boolean, String, String, String, String, Timestamp> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Long, String, String, String, Integer, String, Boolean, Boolean, String, String, String, String, Timestamp> valuesRow() {
        return (Row13) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return User.USER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return User.USER.EMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return User.USER.USERNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return User.USER.PASSWORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return User.USER.PERMISSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return User.USER.AVATAR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field7() {
        return User.USER.VERIFIED_EMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field8() {
        return User.USER.MFA_ENABLED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return User.USER.LOCATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return User.USER.FIRST_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return User.USER.LAST_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return User.USER.MFA_SECRET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field13() {
        return User.USER.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getPermission();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getAvatar();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value7() {
        return getVerifiedEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value8() {
        return getMfaEnabled();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getLocation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getLastName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getMfaSecret();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value13() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value2(String value) {
        setEmail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value3(String value) {
        setUsername(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value4(String value) {
        setPassword(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value5(Integer value) {
        setPermission(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value6(String value) {
        setAvatar(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value7(Boolean value) {
        setVerifiedEmail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value8(Boolean value) {
        setMfaEnabled(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value9(String value) {
        setLocation(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value10(String value) {
        setFirstName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value11(String value) {
        setLastName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value12(String value) {
        setMfaSecret(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value13(Timestamp value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord values(Long value1, String value2, String value3, String value4, Integer value5, String value6, Boolean value7, Boolean value8, String value9, String value10, String value11, String value12, Timestamp value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Long id, String email, String username, String password, Integer permission, String avatar, Boolean verifiedEmail, Boolean mfaEnabled, String location, String firstName, String lastName, String mfaSecret, Timestamp createdAt) {
        super(User.USER);

        set(0, id);
        set(1, email);
        set(2, username);
        set(3, password);
        set(4, permission);
        set(5, avatar);
        set(6, verifiedEmail);
        set(7, mfaEnabled);
        set(8, location);
        set(9, firstName);
        set(10, lastName);
        set(11, mfaSecret);
        set(12, createdAt);
    }
}
