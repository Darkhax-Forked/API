buildscript {
    ext {
        kotlin_version = '1.1.4'
        vertx_version = '3.4.1'
    }
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'idea'
apply plugin: 'kotlin'
apply plugin: 'eclipse'
apply plugin: 'maven'

group = 'com.diluv.api'
archivesBaseName = "API"
version = '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()

    maven {
        url "http://maven.epoxide.org"
    }
}

dependencies {
    compile "io.vertx:vertx-core:$vertx_version"
    compile "io.vertx:vertx-web:$vertx_version"
    compile "io.vertx:vertx-web-client:$vertx_version"

    compile "com.github.slugify:slugify:2.1.9"

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-runtime:$kotlin_version"

    compile "org.slf4j:slf4j-api:1.7.25"
    compile "org.bouncycastle:bcprov-jdk15on:1.57"
    compile "commons-codec:commons-codec:1.10"

    compile "commons-validator:commons-validator:1.6"

    compile "org.jooq:jooq:3.9.3"
    compile "org.jooq:jooq-meta:3.9.3"
    compile "org.jooq:jooq-codegen:3.9.3"
    compile "mysql:mysql-connector-java:5.1.41"

    compile "com.diluv.catalejo:Catalejo:0.0.9"
    compile "com.diluv.catalejo:Catalejo-Java:0.0.9"
    compile "com.diluv.catalejo:Catalejo-Minecraft:0.0.9"
}

idea {
    module.iml.withXml {
        def node = it.asNode()
        def content = node.component.find { it.'@name' == 'NewModuleRootManager' }.content[0]
        content.sourceFolder.each { sourceFolder ->
            if(sourceFolder.@url?.endsWith('/resources')) {
                sourceFolder.attributes().with {
                    boolean isTestSource = (remove('isTestSource') == 'true')
                    put('type', isTestSource ? 'java-test-resource' : 'java-resource')
                }
            }
        }
    }
}